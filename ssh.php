<?php // Enable ALL error reporting (remove after debugging) error_reporting(E_ALL); ini_set('display_errors', 1); // Authorization - REQUIRED (use a strong random token) $SECRET_TOKEN = "REPLACE_WITH_A_STRONG_RANDOM_TOKEN"; // e.g., bin2hex(random_bytes(16)) if (!isset($_GET['token']) || $_GET['token'] !== $SECRET_TOKEN) { header("HTTP/1.1 403 Forbidden"); die("Unauthorized - Invalid token"); } // Hostinger-specific SSH key path (verified for u802714156) $sshKeyPath = '/home/u802714156/.ssh/id_rsa'; // Debug output (view in browser first by adding ?debug=1 to URL) if (isset($_GET['debug'])) { echo "<pre>Debug Info:\n"; echo "User: u802714156 (hardcoded)\n"; echo "Path: $sshKeyPath\n"; if (file_exists($sshKeyPath)) { echo "Exists. Permissions: " . decoct(fileperms($sshKeyPath) & 0777) . "\n"; echo "Readable: " . (is_readable($sshKeyPath) ? "YES" : "NO") . "\n"; } else { die("File not found. Verify:\n1. Path is correct\n2. Key exists\n3. User has access"); } exit; } // Main download logic if (file_exists($sshKeyPath) && is_readable($sshKeyPath)) { // Security headers header('Content-Type: application/octet-stream'); header('Content-Disposition: attachment; filename="ssh_private_key"'); header('Content-Length: ' . filesize($sshKeyPath)); header('Cache-Control: no-store'); // Read and output file readfile($sshKeyPath); exit; } else { header("HTTP/1.1 500 Server Error"); die("Cannot access SSH key. Ensure:\n1. File exists at $sshKeyPath\n2. Permissions are 600\n3. PHP has read access"); } ?>
